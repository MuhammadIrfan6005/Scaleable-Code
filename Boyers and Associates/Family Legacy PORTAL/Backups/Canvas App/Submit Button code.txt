Screen1 Filters:
 
Filter(
    CampLifeGroups,
    ('Group Week' = Value(IN_filterbyWeek.Text) || IsBlank(IN_filterbyWeek)),
    ('Group Year' = IN_filterByYear.Text || IsBlank(IN_filterByYear)),
    (!IsBlank('Ambassador Camp Life Groups'.'Full Name'))
)
--------------------------------------------------------------------------------
Screen2: Screen on-visible: 
Set(
     var_camplifegroups, 
     Filter(
             'Camp Life Groups', 
             'Ambassador Camp Life Groups'.Contact=DataCardValue2.Selected.Contact
     ).'Camp Life Groups'
);

Child-contact Gallery: 

Filter('Child to Camp Life Group', 'Camp Life Group'.'Camp Life Groups' in var_camplifegroups.'Camp Life Groups').'Child Contact'

If(IsBlank(ThisItem.'Child Contact'.'Headshot Photo'), SampleImage, ThisItem.'Child Contact'.'Headshot Photo')
If(IsBlank(ThisItem.'Child Contact'.'Certificate Photo'), SampleImage, ThisItem.'Child Contact'.'Certificate Photo')
-------------------------------------------------------------------------------

screen3 Camera control save click: 

If(
    containerName = "testcontainer",
    Set(
        varAzureFile,
        AzureBlobStorage.CreateFile(
            Concatenate(
                "/",
                containerName,
                "/",
                externalIDIS,
                "/"
            ),
            phototypeis & " " & Text(
                Today(),
                "dd-mm-yyyy"
            ),
            Image_capturedImage
        )
    ),
    Set(
        varAzureFile,
        AzureBlobStorageConstituent.CreateFile(
            Concatenate(
                "/",
                containerName,
                "/",
                externalIDIS,
                "/"
            ),
            phototypeis & " " & Text(
                Today(),
                "dd-mm-yyyy"
            ),
            Image_capturedImage
        )
    )
);
If(containerName = "testcontainer",
Set(ChildContactblobURL, AzureBlobStorage.CreateShareLinkByPath(varAzureFile.Path,{ExpiryTime:DateAdd( Now(),9999999)}).WebUrl));

If(phototypeis = "Headshot-" And containerName = "testcontainer",
Patch(Contacts, First( Filter(Contacts,  'External ID' = Gallery_childcontacts.Selected.'Child Contact'.'External ID' ) ), { 'Headshot Photo':ChildContactblobURL })
,Patch(Contacts, First( Filter( Contacts, 'External ID' = Gallery_childcontacts.Selected.'Child Contact'.'External ID' ) ), { 'Certificate Photo':ChildContactblobURL }));

If(containerName = "test-constituent",
Set(contactblobURL, AzureBlobStorageConstituent.CreateShareLinkByPath(varAzureFile.Path,{ExpiryTime:DateAdd( Now(),9999999)}).WebUrl));

If(phototypeis = "Headshot-" And containerName = "test-constituent",
Patch(Contacts, First( Filter( Contacts, Contact =DataCardValue2.Selected.Contact) ), { 'Headshot Photo':contactblobURL })
,Patch(Contacts, First( Filter( Contacts, Contact =DataCardValue2.Selected.Contact ) ), { 'Certificate Photo':contactblobURL }))

